name: Build and Deploy from Dev Branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'  # Adjust based on your project

      - name: Build the JAR using Maven
        run: mvn clean package -DskipTests

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Copy JAR to remote server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no target/*.jar "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}":/root/OpsCICD/github/app.jar
      - name: Kill process on port 8082 (if any)
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" '
            PID=$(lsof -ti:8082)
            if [ -n "$PID" ]; then
              echo "Killing process on port 8082: $PID"
              kill -9 $PID
            else
              echo "No process running on port 8082."
            fi
          '

      - name: Run the JAR on remote server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" 'nohup java -jar /root/OpsCICD/github/app.jar > /root/OpsCICD/github/app.log 2>&1 &'
