name: Build and Deploy from Dev Branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests


  deploy:
    needs: build
    runs-on: ubuntu-latest

    env:
      DEPLOY_DIR: /root/OpsCICD/github
      DEPLOY_PORT: 8085

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'  # Adjust based on your project

      - name: Build the JAR using Maven
        run: mvn clean package -DskipTests

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
        
      - name: Make deployment directory if not exist
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" "mkdir -p $DEPLOY_DIR"

      # just decomment this section and comment the rest of the section to do the further process with server script
      # - name: Run deployment script on remote server
      #   run: |
      #     sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" "chmod +x $DEPLOY_DIR/run-github-app1.sh && $DEPLOY_DIR/run-github-app1.sh"
          
      - name: Kill process on port $DEPLOY_PORT (if any)
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" "
            PID=\$(lsof -ti:$DEPLOY_PORT)
            if [ -n \"\$PID\" ]; then
              echo \"Killing process on port $DEPLOY_PORT: \$PID\"
              kill -9 \$PID
            else
              echo \"No process running on port $DEPLOY_PORT.\"
            fi
          "

      - name: Run the JAR on remote server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" "nohup java -jar $DEPLOY_DIR/app.jar > $DEPLOY_DIR/app.log 2>&1 &"

