name: Build and Deploy from Dev Branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests


  deploy:
    needs: build
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
  
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'  # Adjust based on your project
  
      - name: Build the JAR using Maven
        run: mvn clean package -DskipTests
  
      - name: Set up SSH key and known hosts
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.SERVER_HOST }}" >> ~/.ssh/known_hosts
  
      - name: Copy JAR to remote server
        run: |
          scp -i private_key.pem -o StrictHostKeyChecking=no target/*.jar "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}":/root/OpsCICD/app.jar
  
      - name: Kill process on port 8081 (if any)
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" '
            PID=$(lsof -ti:8081)
            if [ -n "$PID" ]; then
              echo "Killing process on port 8081: $PID"
              kill -9 $PID
            else
              echo "No process running on port 8081."
            fi
          '
  
      - name: Run the JAR on remote server
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}"@"${{ secrets.SERVER_HOST }}" '
            nohup java -jar /root/OpsCICD/app.jar > /root/OpsCICD/app.log 2>&1 &
          '
  
      - name: Clean up private key
        run: rm -f private_key.pem
